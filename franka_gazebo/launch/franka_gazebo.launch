<?xml version="1.0" ?>
<launch>
  <arg name="robot_ip" />
  <arg name="load_gripper" default="true" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <!--arg name="model" default="$(find franka_description)/robots/panda_arm.urdf.xacro"/-->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find franka_gazebo)/launch/franka.world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find franka_description)/robots/panda_arm_hand.urdf.xacro' connected_to:='world'" if="$(arg load_gripper)" />
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find franka_description)/robots/panda_arm.urdf.xacro' connected_to:='world'" unless="$(arg load_gripper)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -model robot -param robot_description
        -J panda_joint1 0.0
        -J panda_joint2 0.0
        -J panda_joint3 0.0
        -J panda_joint4 -1.54
        -J panda_joint5 0.0
        -J panda_joint6 1.83
        -J panda_joint7 0.0
        -unpause"
        respawn="false" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" />
  <rosparam command="load" file="$(find franka_gazebo)/config/gazebo_controllers.yaml" />

  <node name="sim_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_sim_state_controller franka_left_finger_controller franka_right_finger_controller" if="$(arg load_gripper)"/>
  <node name="sim_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_sim_state_controller" unless="$(arg load_gripper)"/>

  <!-- Start script that provides the action interface needed by moveIt to control the gripper -->
  <node name="franka_gripper" pkg="franka_gazebo" type="gripper_action_server.py" respawn="false" output="screen" args="" if="$(arg load_gripper)"/>

  <!--node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/-->

  <!--node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
    <param name="rate" value="30"/>
  </node-->
  <!--node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired, franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired] </rosparam>
    <param name="rate" value="30"/>
    <remap from="/joint_states" to="/joint_states_desired" />
  </node-->

  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />
</launch>
